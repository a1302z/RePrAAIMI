from sys import path
from pathlib import Path
import pandas as pd
from pathlib import Path

from argparse import ArgumentParser

path.insert(0, str(Path.cwd()))

from dptraining.vulnerability.visualize_reconstructions import get_metric_col

if __name__ == "__main__":
    parser = ArgumentParser()
    parser.add_argument(
        "--recon_csv",
        type=Path,
        default=None,
        required=True,
        help="Path to csv file with distance information",
    )
    parser.add_argument(
        "--metric_to_use",
        type=str,
        default="lpips",
        help="Name of distance metric used",
    )
    parser.add_argument(
        "--threshold", type=float, required=True, help="Threshold (eta) for ReRo"
    )
    args = parser.parse_args()
    # %%
    recon_df = pd.read_csv(args.recon_csv)
    dist_columns, idx_columns, _, _ = get_metric_col(args, recon_df)
    for eps_value, column_name in dist_columns.items():
        res = (recon_df[column_name] < args.threshold).value_counts()
        correct = res[True] if True in res else 0
        incorrect = res[False] if False in res else 0
        print(
            f"Privacy: {eps_value}\tReRo@{args.threshold}: {100.0*correct / (incorrect + correct):.2f}%"
        )
